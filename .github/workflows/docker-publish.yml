name: Docker

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

env:
  IMAGE_NAME: sbt-alpine

jobs:
  push-full:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build full image
        run: docker build . --file Dockerfile.full --tag $IMAGE_NAME
      - name: Log into registry
        if: github.event_name == 'push'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push full image
        if: github.event_name == 'push'
        run: |
          set -x

          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=full || VERSION=${VERSION}-full

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          [ "$VERSION" != "full" ] && docker tag $IMAGE_NAME $IMAGE_ID:full && docker push $IMAGE_ID:full

  push-slim:
    runs-on: ubuntu-latest
    needs: push-full
    steps:
      - uses: actions/checkout@master
      - name: Build slim image
        run: docker build . --file Dockerfile.slim --tag $IMAGE_NAME
      - name: Log into registry
        if: github.event_name == 'push'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push slim image
        if: github.event_name == 'push'
        run: |
          set -x

          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=slim || VERSION=${VERSION}-slim

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          [ "$VERSION" != "slim" ] && docker tag $IMAGE_NAME $IMAGE_ID:slim && docker push $IMAGE_ID:slim

          # Use Docker `latest` tag convention
          docker tag $IMAGE_NAME $IMAGE_ID:latest && docker push $IMAGE_ID:latest

